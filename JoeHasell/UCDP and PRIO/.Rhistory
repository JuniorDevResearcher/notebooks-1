regions_vector<- this_conflict %>%
select(region) %>%
unique() %>%
as.character() %>%
gsub(" ", "") %>%
strsplit(",") %>%
unlist() %>%
as.numeric()
regions_vector<- this_conflict %>%
select(region) %>%
unique() %>%
as.character() %>%
gsub(" ", "", .) %>%
strsplit(",") %>%
unlist() %>%
as.numeric()
#  a blank dataframe to append the data for individual conflicts with multiple regions
df_multi_region_conflicts_by_region<- data.frame(year = numeric(),
region = numeric(),
type = numeric(),
conflict_id = numeric(),
conflict_share = numeric())
# for each conflict with multiple regions make a new df with one row per region, and give them the proportionate share
for(this_id in unique(multi_region_conflicts$conflict_id)){
this_conflict<- multi_region_conflicts %>%
filter(conflict_id == this_id)
regions_vector<- this_conflict %>%
select(region) %>%
unique() %>%
as.character() %>%
gsub(" ", "", .) %>%
strsplit(",") %>%
unlist() %>%
as.numeric()
df_this_conflict_by_region<- data.frame(region = regions_vector)
df_this_conflict_by_region<- df_this_conflict_by_region %>%
mutate(year =  this_conflict %>%
select(year) %>%
as.numeric(),
type = this_conflict %>%
select(type) %>%
as.numeric(),
type = this_conflict %>%
select(conflict_id) %>%
as.numeric(),
conflict_share = 1/length(regions_vector))
df_multi_region_conflicts_by_region<- rbind(df_multi_region_conflicts_by_region, df_this_conflict_by_region)
}
View(this_conflict)
regions_vector<- this_conflict %>%
select(region) %>%
unique() %>%
as.character() %>%
gsub(" ", "", .) %>%
strsplit(",") %>%
unlist()
#  a blank dataframe to append the data for individual conflicts with multiple regions
df_multi_region_conflicts_by_region<- data.frame(year = numeric(),
region = numeric(),
type = numeric(),
conflict_id = numeric(),
conflict_share = numeric())
# for each conflict with multiple regions make a new df with one row per region, and give them the proportionate share
for(this_id in unique(multi_region_conflicts$conflict_id)){
this_conflict<- multi_region_conflicts %>%
filter(conflict_id == this_id)
regions_vector<- this_conflict %>%
select(region) %>%
unique() %>%
as.character() %>%
gsub(" ", "", .) %>%
strsplit(",") %>%
unlist()
this_conflict_region<- list()
for(reg in regions_vector){
this_conflict_region[[reg]]<-  this_conflict %>%
mutate(region = reg,
conflict_share = 1/length(regions_vector))
}
df_this_conflict_by_region<- bind_rows(this_conflict_region)
df_multi_region_conflicts_by_region<- rbind(df_multi_region_conflicts_by_region, df_this_conflict_by_region)
}
View(df_multi_region_conflicts_by_region)
# Give full share to the separated-out single-region conflicts
single_region_conflicts<- single_region_conflicts %>%
mutate(conflict_share = 1)
df_ucdp_acd_unmixed_regions<- rbind(
subset(single_region_conflicts, select = colnames(df_multi_region_conflicts_by_region)),
df_multi_region_conflicts_by_region
)
View(df_ucdp_acd_unmixed_regions)
all_types_by_region_total<- df_ucdp_acd_unmixed_regions %>%
group_by(year, region, ) %>%
summarise(number_of_conflicts = sum(n())) %>%
mutate(type = "All types of conflict")
View(all_types_by_region_total)
df_ucdp_acd_unmixed_regions<- rbind(
subset(single_region_conflicts, select = colnames(df_multi_region_conflicts_by_region)),
df_multi_region_conflicts_by_region
)
# add 'all' type total
all_types_by_region_total<- df_ucdp_acd_unmixed_regions %>%
group_by(year, region, ) %>%
summarise(number_of_conflicts = sum(n())) %>%
mutate(type = "All types of conflict")
df_ucdp_acd_unmixed_regions<- rbind(df_ucdp_acd_unmixed_regions, all_types_by_region_total)
df_ucdp_acd_unmixed_regions<- rbind(
subset(single_region_conflicts, select = colnames(df_multi_region_conflicts_by_region)),
df_multi_region_conflicts_by_region
) %>%
select(year, region, type, conflict_share)
df_ucdp_acd_unmixed_regions<- df_ucdp_acd_unmixed_regions %>%
mutate(type = recode(type,
`1` = "Colonial or imperial conflicts", # Extrasystemic
`2` = "Conflicts between states", # interstate
`3` = "Civil conflicts", # intrastate
`4` = "Civil conflicts with foreign state intervention" #  internationalized intrastate
))
# df_prio_agg_full<- df_prio_agg_full %>%
#  mutate(region = recode(region,
#                   `1` = "Europe",
#                   `2` = "Middle East",
#                   `3` = "Asia & Oceania",
#                   `4` = "Africa",
#                   `5` = "Americas"
#                  ))
df_ucdp_acd_agg<- df_ucdp_acd_unmixed_regions %>%
group_by(year, type, region) %>%
summarise(number_of_conflicts = n())
years<- seq(from= 1946, to = 2020)
types<- c(1,2,3,4)
df_ucdp_acd_full<- expand.grid(years, types)
# rename columns as per actual data
names(df_ucdp_acd_full)<- c("year", "type")
# merge in actual aggrgeated data
df_ucdp_acd_full<- left_join(df_ucdp_acd_full, df_ucdp_acd_agg)
years<- seq(from= 1946, to = 2020)
types<- c("1","2","3","4")
df_ucdp_acd_full<- expand.grid(years, types)
# rename columns as per actual data
names(df_ucdp_acd_full)<- c("year", "type")
# merge in actual aggrgeated data
df_ucdp_acd_full<- left_join(df_ucdp_acd_full, df_ucdp_acd_agg)
df_ucdp_acd_full<- df_ucdp_acd_full %>%
mutate(type = recode(type,
`1` = "Colonial or imperial conflicts", # Extrasystemic
`2` = "Conflicts between states", # interstate
`3` = "Civil conflicts", # intrastate
`4` = "Civil conflicts with foreign state intervention" #  internationalized intrastate
))
# df_prio_agg_full<- df_prio_agg_full %>%
#  mutate(region = recode(region,
#                   `1` = "Europe",
#                   `2` = "Middle East",
#                   `3` = "Asia & Oceania",
#                   `4` = "Africa",
#                   `5` = "Americas"
#                  ))
View(df_ucdp_acd_full)
all_types_by_region_total<- df_ucdp_acd_full %>%
group_by(year, region ) %>%
summarise(number_of_conflicts = sum(n())) %>%
mutate(type = "All types of conflict")
df_ucdp_acd_full<- rbind(df_ucdp_acd_full, all_types_by_region_total)
df_ucdp_acd<- read.csv("original/UCDP Yearly datasets since 1946/ucdp-prio-acd-211.csv")
dups<- df_ucdp_acd %>%
group_by(conflict_id, year) %>%
filter(n()>1)
kable(dups)
df_ucdp_acd<- df_ucdp_acd %>%
rename(type = type_of_conflict)
# Region code is stored as string. A string length>1 means more than one region is coded.
multi_region_conflicts<- df_ucdp_acd %>%
filter(nchar(region)>1)
single_region_conflicts<- df_ucdp_acd %>%
filter(nchar(region)==1)
kable(multi_region_conflicts)
#  a blank dataframe to append the data for individual conflicts with multiple regions
df_multi_region_conflicts_by_region<- data.frame(year = numeric(),
region = numeric(),
type = numeric(),
conflict_id = numeric(),
conflict_share = numeric())
# for each conflict with multiple regions make a new df with one row per region, and give them the proportionate share
for(this_id in unique(multi_region_conflicts$conflict_id)){
this_conflict<- multi_region_conflicts %>%
filter(conflict_id == this_id)
regions_vector<- this_conflict %>%
select(region) %>%
unique() %>%
as.character() %>%
gsub(" ", "", .) %>%
strsplit(",") %>%
unlist()
this_conflict_region<- list()
for(reg in regions_vector){
this_conflict_region[[reg]]<-  this_conflict %>%
mutate(region = reg,
conflict_share = 1/length(regions_vector))
}
df_this_conflict_by_region<- bind_rows(this_conflict_region)
df_multi_region_conflicts_by_region<- rbind(df_multi_region_conflicts_by_region, df_this_conflict_by_region)
}
# Give full share to the separated-out single-region conflicts
single_region_conflicts<- single_region_conflicts %>%
mutate(conflict_share = 1)
df_ucdp_acd_unmixed_regions<- rbind(
subset(single_region_conflicts, select = colnames(df_multi_region_conflicts_by_region)),
df_multi_region_conflicts_by_region
)
df_ucdp_acd_agg<- df_ucdp_acd_unmixed_regions %>%
group_by(year, type, region) %>%
summarise(number_of_conflicts = n())
years<- seq(from= 1946, to = 2020)
types<- c("1","2","3","4")
df_ucdp_acd_full<- expand.grid(years, types)
# rename columns as per actual data
names(df_ucdp_acd_full)<- c("year", "type")
# merge in actual aggrgeated data
df_ucdp_acd_full<- left_join(df_ucdp_acd_full, df_ucdp_acd_agg)
View(df_ucdp_acd_agg)
years<- seq(from= 1946, to = 2020)
types<- c(1,2,3,4)
df_ucdp_acd_full<- expand.grid(years, types)
# rename columns as per actual data
names(df_ucdp_acd_full)<- c("year", "type")
# merge in actual aggrgeated data
df_ucdp_acd_full<- left_join(df_ucdp_acd_full, df_ucdp_acd_agg)
years<- seq(from= 1946, to = 2020)
types<- c(1,2,3,4)
df_ucdp_acd_full<- expand.grid(years, types)
# rename columns as per actual data
names(df_ucdp_acd_full)<- c("year", "type")
# merge in actual aggrgeated data
df_ucdp_acd_full<- left_join(df_ucdp_acd_full, df_ucdp_acd_agg)
# Replace NA with zeros as that's what 'no conflicts' means here
df_ucdp_acd_full<- df_ucdp_acd_full %>%
replace_na(number_of_conflicts, 0)
# Replace NA with zeros as that's what 'no conflicts' means here
df_ucdp_acd_full<- df_ucdp_acd_full %>%
replace_na(number_of_conflicts = 0)
# Replace NA with zeros as that's what 'no conflicts' means here
df_ucdp_acd_full<- df_ucdp_acd_full %>%
mutate(number_of_conflicts = replace_na(number_of_conflicts, 0))
df_ucdp_acd<- read.csv("original/UCDP Yearly datasets since 1946/ucdp-prio-acd-211.csv")
dups<- df_ucdp_acd %>%
group_by(conflict_id, year) %>%
filter(n()>1)
kable(dups)
df_ucdp_acd<- df_ucdp_acd %>%
rename(type = type_of_conflict)
# Region code is stored as string. A string length>1 means more than one region is coded.
multi_region_conflicts<- df_ucdp_acd %>%
filter(nchar(region)>1)
single_region_conflicts<- df_ucdp_acd %>%
filter(nchar(region)==1)
kable(multi_region_conflicts)
#  a blank dataframe to append the data for individual conflicts with multiple regions
df_multi_region_conflicts_by_region<- data.frame(year = numeric(),
region = numeric(),
type = numeric(),
conflict_id = numeric(),
conflict_share = numeric())
# for each conflict with multiple regions make a new df with one row per region, and give them the proportionate share
for(this_id in unique(multi_region_conflicts$conflict_id)){
this_conflict<- multi_region_conflicts %>%
filter(conflict_id == this_id)
regions_vector<- this_conflict %>%
select(region) %>%
unique() %>%
as.character() %>%
gsub(" ", "", .) %>%
strsplit(",") %>%
unlist()
this_conflict_region<- list()
for(reg in regions_vector){
this_conflict_region[[reg]]<-  this_conflict %>%
mutate(region = reg,
conflict_share = 1/length(regions_vector))
}
df_this_conflict_by_region<- bind_rows(this_conflict_region)
df_multi_region_conflicts_by_region<- rbind(df_multi_region_conflicts_by_region, df_this_conflict_by_region)
}
# Give full share to the separated-out single-region conflicts
single_region_conflicts<- single_region_conflicts %>%
mutate(conflict_share = 1)
df_ucdp_acd_unmixed_regions<- rbind(
subset(single_region_conflicts, select = colnames(df_multi_region_conflicts_by_region)),
df_multi_region_conflicts_by_region
)
df_ucdp_acd_agg<- df_ucdp_acd_unmixed_regions %>%
group_by(year, type, region) %>%
summarise(number_of_conflicts = n())
years<- seq(from= 1946, to = 2020)
types<- c(1,2,3,4)
df_ucdp_acd_full<- expand.grid(years, types)
# rename columns as per actual data
names(df_ucdp_acd_full)<- c("year", "type")
# merge in actual aggrgeated data
df_ucdp_acd_full<- left_join(df_ucdp_acd_full, df_ucdp_acd_agg)
# Replace NA with zeros as that's what 'no conflicts' means here
df_ucdp_acd_full<- df_ucdp_acd_full %>%
mutate(number_of_conflicts = replace_na(number_of_conflicts, 0))
df_ucdp_acd_full<- df_ucdp_acd_full %>%
mutate(region = recode(region,
`1` = "Europe",
`2` = "Middle East",
`3` = "Asia & Oceania",
`4` = "Africa",
`5` = "Americas"
))
df_ucdp_acd_full<- df_ucdp_acd_full %>%
mutate(type = recode(type,
`1` = "Colonial or imperial conflicts", # Extrasystemic
`2` = "Conflicts between states", # interstate
`3` = "Civil conflicts", # intrastate
`4` = "Civil conflicts with foreign state intervention" #  internationalized intrastate
))
# Add World total (by type)
world_total_by_type<- df_ucdp_acd_full %>%
group_by(year, type) %>%
summarise(number_of_conflicts = sum(conflict_share)) %>%
mutate(region = "World")
df_ucdp_acd<- read.csv("original/UCDP Yearly datasets since 1946/ucdp-prio-acd-211.csv")
dups<- df_ucdp_acd %>%
group_by(conflict_id, year) %>%
filter(n()>1)
kable(dups)
df_ucdp_acd<- df_ucdp_acd %>%
rename(type = type_of_conflict)
# Region code is stored as string. A string length>1 means more than one region is coded.
multi_region_conflicts<- df_ucdp_acd %>%
filter(nchar(region)>1)
single_region_conflicts<- df_ucdp_acd %>%
filter(nchar(region)==1)
kable(multi_region_conflicts)
#  a blank dataframe to append the data for individual conflicts with multiple regions
df_multi_region_conflicts_by_region<- data.frame(year = numeric(),
region = numeric(),
type = numeric(),
conflict_id = numeric(),
conflict_share = numeric())
# for each conflict with multiple regions make a new df with one row per region, and give them the proportionate share
for(this_id in unique(multi_region_conflicts$conflict_id)){
this_conflict<- multi_region_conflicts %>%
filter(conflict_id == this_id)
regions_vector<- this_conflict %>%
select(region) %>%
unique() %>%
as.character() %>%
gsub(" ", "", .) %>%
strsplit(",") %>%
unlist()
this_conflict_region<- list()
for(reg in regions_vector){
this_conflict_region[[reg]]<-  this_conflict %>%
mutate(region = reg,
conflict_share = 1/length(regions_vector))
}
df_this_conflict_by_region<- bind_rows(this_conflict_region)
df_multi_region_conflicts_by_region<- rbind(df_multi_region_conflicts_by_region, df_this_conflict_by_region)
}
# Give full share to the separated-out single-region conflicts
single_region_conflicts<- single_region_conflicts %>%
mutate(conflict_share = 1)
df_ucdp_acd_unmixed_regions<- rbind(
subset(single_region_conflicts, select = colnames(df_multi_region_conflicts_by_region)),
df_multi_region_conflicts_by_region
)
df_ucdp_acd_agg<- df_ucdp_acd_unmixed_regions %>%
group_by(year, type, region) %>%
summarise(number_of_conflicts = n(),) # counting rows to count conflicts
# Add World total (by type)
world_total_by_type<- df_ucdp_acd_unmixed_regions %>%
group_by(year, type) %>%
summarise(number_of_conflicts = sum(conflict_share)) %>%
mutate(region = "World")
df_ucdp_acd_agg<- df_ucdp_acd_agg %>%
mutate(region = recode(region,
`1` = "Europe",
`2` = "Middle East",
`3` = "Asia & Oceania",
`4` = "Africa",
`5` = "Americas"
))
df_ucdp_acd_agg<- rbind(df_ucdp_acd_agg, world_total_by_type)
View(df_ucdp_acd_agg)
years<- seq(from= 1946, to = 2020)
types<- c(1,2,3,4)
regions<- c( "Europe","Middle East","Asia & Oceania","Africa","Americas", "World")
df_ucdp_acd_full<- expand.grid(years, types, regions)
# rename columns as per actual data
names(df_ucdp_acd_full)<- c("year", "type", "region")
# merge in actual aggrgeated data
df_ucdp_acd_full<- left_join(df_ucdp_acd_full, df_ucdp_acd_agg)
# Replace NA with zeros as that's what 'no conflicts' means here
df_ucdp_acd_full<- df_ucdp_acd_full %>%
mutate(number_of_conflicts = replace_na(number_of_conflicts, 0))
df_ucdp_acd_full<- df_ucdp_acd_full %>%
mutate(type = recode(type,
`1` = "Colonial or imperial conflicts", # Extrasystemic
`2` = "Conflicts between states", # interstate
`3` = "Civil conflicts", # intrastate
`4` = "Civil conflicts with foreign state intervention" #  internationalized intrastate
))
# add 'all' type total
all_types_by_region_total<- df_ucdp_acd_full %>%
group_by(year, region ) %>%
summarise(number_of_conflicts = sum(number_of_conflicts)) %>%
mutate(type = "All types of conflict")
df_ucdp_acd_full<- rbind(df_ucdp_acd_full, all_types_by_region_total)
df_ucdp_acd_full_wide<- df_ucdp_acd_full %>%
pivot_wider(names_from = "type", values_from="number_of_conflicts")
View(df_ucdp_acd_full_wide)
df_ucdp_acd<- read.csv("original/UCDP Yearly datasets since 1946/ucdp-prio-acd-211.csv")
dups<- df_ucdp_acd %>%
group_by(conflict_id, year) %>%
filter(n()>1)
kable(dups)
```{r}
df_ucdp_acd<- read.csv("original/UCDP Yearly datasets since 1946/ucdp-prio-acd-211.csv")
```{r}
df_ucdp_acd<- read.csv("original/UCDP Yearly datasets since 1946/ucdp-prio-acd-211.csv")
df_ucdp_acd<- read.csv("original/UCDP Yearly datasets since 1946/ucdp-prio-acd-211.csv")
dups<- df_ucdp_acd %>%
group_by(conflict_id, year) %>%
filter(n()>1)
kable(dups)
df_ucdp_acd<- df_ucdp_acd %>%
rename(type = type_of_conflict)
# Add World total (by type)
df_ucdp_acd_agg_world<- df_ucdp_acd %>%
group_by(year, type) %>%
summarise(number_of_conflicts = sum(n())) %>%
mutate(region = "World")
# Region code is stored as string. A string length>1 means more than one region is coded.
multi_region_conflicts<- df_ucdp_acd %>%
filter(nchar(region)>1)
single_region_conflicts<- df_ucdp_acd %>%
filter(nchar(region)==1)
kable(multi_region_conflicts)
#  a blank dataframe to append the data for individual conflicts with multiple regions
df_multi_region_conflicts_by_region<- data.frame(year = numeric(),
region = numeric(),
type = numeric(),
conflict_id = numeric())
# for each conflict with multiple regions make a new df with one row per region, and give them the proportionate share
for(this_id in unique(multi_region_conflicts$conflict_id)){
this_conflict<- multi_region_conflicts %>%
filter(conflict_id == this_id)
regions_vector<- this_conflict %>%
select(region) %>%
unique() %>%
as.character() %>%
gsub(" ", "", .) %>%
strsplit(",") %>%
unlist()
this_conflict_region<- list()
for(reg in regions_vector){
this_conflict_region[[reg]]<-  this_conflict %>%
mutate(region = reg)
}
df_this_conflict_by_region<- bind_rows(this_conflict_region)
df_multi_region_conflicts_by_region<- rbind(df_multi_region_conflicts_by_region, df_this_conflict_by_region)
}
df_ucdp_acd_unmixed_regions<- rbind(
subset(single_region_conflicts, select = colnames(df_multi_region_conflicts_by_region)),
df_multi_region_conflicts_by_region
)
df_ucdp_acd_agg_regions<- df_ucdp_acd_unmixed_regions %>%
group_by(year, type, region) %>%
summarise(number_of_conflicts = n()) # counting rows to count conflicts
df_ucdp_acd_agg_regions<- df_ucdp_acd_agg_regions %>%
mutate(region = recode(region,
`1` = "Europe",
`2` = "Middle East",
`3` = "Asia & Oceania",
`4` = "Africa",
`5` = "Americas"
))
df_ucdp_acd_agg<- rbind(df_ucdp_acd_agg_regions,
subset(df_ucdp_acd_agg_world, select = colnames(df_ucdp_acd_agg_regions)))
years<- seq(from= 1946, to = 2020)
types<- c(1,2,3,4)
regions<- c( "Europe","Middle East","Asia & Oceania","Africa","Americas", "World")
df_ucdp_acd_full<- expand.grid(years, types, regions)
# rename columns as per actual data
names(df_ucdp_acd_full)<- c("year", "type", "region")
# merge in actual aggrgeated data
df_ucdp_acd_full<- left_join(df_ucdp_acd_full, df_ucdp_acd_agg)
# Replace NA with zeros as that's what 'no conflicts' means here
df_ucdp_acd_full<- df_ucdp_acd_full %>%
mutate(number_of_conflicts = replace_na(number_of_conflicts, 0))
df_ucdp_acd_full<- df_ucdp_acd_full %>%
mutate(type = recode(type,
`1` = "Number of colonial or imperial conflicts", # Extrasystemic
`2` = "Number of conflicts between states", # interstate
`3` = "Number of civil conflicts", # intrastate
`4` = "Number of civil conflicts with foreign state intervention" #  internationalized intrastate
))
# add 'all' type total
all_types_by_region_total<- df_ucdp_acd_full %>%
group_by(year, region ) %>%
summarise(number_of_conflicts = sum(number_of_conflicts)) %>%
mutate(type = "Number of conflicts (all types)")
df_ucdp_acd_full<- rbind(df_ucdp_acd_full, all_types_by_region_total)
df_ucdp_acd_full_wide<- df_ucdp_acd_full %>%
pivot_wider(names_from = "type", values_from="number_of_conflicts")
df_ucdp_acd_full_wide<- df_ucdp_acd_full %>%
pivot_wider(names_from = "type", values_from="number_of_conflicts") %>%
rename(entity = region)
write.csv(df_ucdp_acd_full_wide, "output/Number of state-based conflicts, by conflict type and world region (UCDP/PRIO).csv", row.names = FALSE)
