#%%
import pandas as pd
from pathlib import Path


# Filled/lined-up data
#%%
# Make a list of all csv files in the relevant folder using pathlib
all_files = Path('API_output/percentiles/filled_true').glob('*.csv')

# Read in and concat (append together) all the files
df_filled = pd.concat((pd.read_csv(f) for f in all_files))

#%%
# Cleaning - see notebook for discussion

# Drop El Salvador and Sierra Leone (negative poverty lines)
df_filled = df_filled[~df_filled['entity'].isin(['El Salvador', 'Sierra Leone'])]

# Drop headcount=0 observations
df_filled = df_filled[df_filled['headcount']!=0]

# Drop duplicate rows (generated by the different requested
# percentiles returning the same `headcount`).
#cols = [i for i in df_filled.columns if i not in ['requested_p']]

df_filled = df_filled.drop_duplicates(subset=['country_name', 'reporting_year', 'reporting_level', 'welfare_type', 'poverty_line','headcount'], keep='first')

#%%
# Write to .CSV
df_filled.to_csv('API_output/percentiles/all_percentiles_filled.csv', index=False)
#%%

# survey data

# Make a list of all csv files in the relevant folder using pathlib
all_files = Path('API_output/percentiles/filled_false').glob('*.csv')

# Read in and concat (append together) all the files
df_survey= pd.concat((pd.read_csv(f) for f in all_files))

#%%
# Cleaning - see notebook for discussion

# Drop El Salvador and Sierra Leone (negative poverty lines)
#df_survey = df_survey[~df_survey['entity'].isin(['El Salvador', 'Sierra Leone'])]

# Drop headcount=0 observations
df_survey = df_survey[df_survey['headcount']!=0]

# Drop duplicate rows (generated by the different requested
# percentiles returning the same `headcount`).
#cols = [i for i in df_survey.columns if i not in ['requested_p']]

df_survey = df_survey.drop_duplicates(subset=['country_name', 'reporting_year', 'reporting_level', 'welfare_type', 'poverty_line','headcount'], keep='first')

#%%
# Write to .CSV
df_survey.to_csv('API_output/percentiles/all_percentiles_survey.csv', index=False)
#%%